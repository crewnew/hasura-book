version: '3.6'
services:
  traefik:
    image: "traefik:v2.5"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.file.directory=/etc/traefik/dynamic_conf"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      - "--certificatesresolvers.le.acme.email=${SSL_EMAIL}"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
      - "--providers.docker.exposedByDefault=false"
      - "--global.checkNewVersion=true"
      - "--global.sendAnonymousUsage=true"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--log.level=DEBUG"
      - "--api"
      - "--ping"
    ports:
      - "80:80"
      - "443:443"
      - "9090:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  postgres:
    image: postgres:15
    restart: always
    volumes:
      - ./data/db:/var/lib/postgresql/data
      - ./initdb.d:/docker-entrypoint-initdb.d:ro
    environment:
      POSTGRES_PASSWORD: postgrespassword
  graphql-engine:
    image: hasura/graphql-engine:v2.15.2
    depends_on:
      - postgres
    restart: always
    expose:
      - 8080
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      HASURA_GRAPHQL_JWT_SECRET: '${HASURA_GRAPHQL_JWT_SECRET}'
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: public
      HASURA_GRAPHQL_LOG_LEVEL: debug
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true'
      HASURA_GRAPHQL_EXPERIMENTAL_FEATURES: 'inherited_roles, naming_convention, streaming_subscriptions'
      HASURA_GRAPHQL_INFER_FUNCTION_PERMISSIONS: 'true'
      HASURA_GRAPHQL_DEFAULT_NAMING_CONVENTION: 'graphql-default'
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.graphql_https.redirectscheme.scheme=https"
      - "traefik.http.routers.graphql.entrypoints=web"
      - "traefik.http.routers.graphql.rule=Host(`${API_DOMAIN}`) && PathPrefix(`/`)"
      - "traefik.http.routers.graphql.middlewares=graphql_https@docker"
      - "traefik.http.routers.graphql_https.rule=Host(`${API_DOMAIN}`) && PathPrefix(`/`)"
      - "traefik.http.routers.graphql_https.tls.certresolver=le"
      - "traefik.http.routers.graphql_https.entrypoints=websecure"
  auth:
    image: nhost/hasura-auth:0.16.2
    depends_on:
      - postgres
      - graphql-engine
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      HASURA_GRAPHQL_GRAPHQL_URL: http://graphql-engine:8080/v1/graphql
      HASURA_GRAPHQL_JWT_SECRET: ${HASURA_GRAPHQL_JWT_SECRET}
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      AUTH_CLIENT_URL: "https://crewnew.com"
      AUTH_ACCESS_CONTROL_ALLOWED_REDIRECT_URLS: 'https://crewnew.com,crewnew://'
      AUTH_EMAIL_SIGNIN_EMAIL_VERIFIED_REQUIRED: 'false'
      AUTH_SERVER_URL: "${API_DOMAIN}/v1/auth"
      AUTH_SMTP_HOST: ${AUTH_SMTP_HOST}
      AUTH_SMTP_PORT: 465
      AUTH_SMTP_USER: ${AUTH_SMTP_USER}
      AUTH_SMTP_PASS: ${AUTH_SMTP_PASS}
      AUTH_SMTP_SENDER: ${AUTH_SMTP_SENDER}
      AUTH_SMTP_SECURE: 'true'
    expose: 
      - 4000
    healthcheck:
      disable: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.strip-auth.stripprefix.prefixes=/v1/auth"
      - "traefik.http.middlewares.auth_https.redirectscheme.scheme=https"
      - "traefik.http.routers.auth_https.middlewares=strip-auth@docker"
      - "traefik.http.routers.auth.entrypoints=web"
      - "traefik.http.routers.auth.rule=Host(`${API_DOMAIN}`) && PathPrefix(`/v1/auth`)"
      - "traefik.http.routers.auth.middlewares=auth_https@docker"
      - "traefik.http.routers.auth_https.rule=Host(`${API_DOMAIN}`) && PathPrefix(`/v1/auth`)"
      - "traefik.http.routers.auth_https.tls.certresolver=le"
      - "traefik.http.routers.auth_https.entrypoints=websecure"
  storage:
    image: nhost/hasura-storage:0.3.1
    depends_on:
      - postgres
      - graphql-engine
      - minio
    restart: always
    expose:
      - 8000
    healthcheck:
      disable: true
    environment:
      PUBLIC_URL: https://${API_DOMAIN}/v1/storage
      HASURA_METADATA: 1
      HASURA_ENDPOINT: http://graphql-engine:8080/v1
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      S3_ACCESS_KEY: ${STORAGE_ACCESS_KEY}
      S3_SECRET_KEY: ${STORAGE_SECRET_KEY}
      S3_ENDPOINT: http://minio:8484
      S3_BUCKET: storage
      POSTGRES_MIGRATIONS: 1
      POSTGRES_MIGRATIONS_SOURCE: postgres://postgres:postgrespassword@postgres:5432/postgres?sslmode=disable
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.strip-suffix.replacepathregex.replacement=/v1/$$1"
      - "traefik.http.middlewares.strip-suffix.replacepathregex.regex=^/v1/storage/(.*)"
      - "traefik.http.middlewares.storage_https.redirectscheme.scheme=https"
      - "traefik.http.routers.storage_https.middlewares=strip-suffix@docker"
      - "traefik.http.routers.storage.entrypoints=web"
      - "traefik.http.routers.storage.rule=Host(`${API_DOMAIN}`) && PathPrefix(`/v1/storage`)"
      - "traefik.http.routers.storage.middlewares=storage_https@docker"
      - "traefik.http.routers.storage_https.rule=Host(`${API_DOMAIN}`) && PathPrefix(`/v1/storage`)"
      - "traefik.http.routers.storage_https.tls.certresolver=le"
      - "traefik.http.routers.storage_https.entrypoints=websecure"
    command: 
      - serve
      - security-opt seccomp=unconfined
  functions:
    image: nhost/functions:0.1.8
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.strip-functions.stripprefix.prefixes=/v1/functions"
      - "traefik.http.routers.functions_https.middlewares=strip-functions@docker"
      - "traefik.http.middlewares.functions_https.redirectscheme.scheme=https"
      - "traefik.http.routers.functions.entrypoints=web"
      - "traefik.http.routers.functions.rule=Host(`${API_DOMAIN}`) && PathPrefix(`/v1/functions`)"
      - "traefik.http.routers.functions.middlewares=functions_https@docker"
      - "traefik.http.routers.functions_https.rule=Host(`${API_DOMAIN}`) && PathPrefix(`/v1/functions`)"
      - "traefik.http.routers.functions_https.tls.certresolver=le"
      - "traefik.http.routers.functions_https.entrypoints=websecure"
    restart: always
    expose: 
      - 3000
    healthcheck:
      disable: true
    volumes:
      - ./../packages/functions:/opt/project
      - functions_node_modules:/opt/project/node_modules
      - /opt/project/data/
      - /opt/project/initdb.d/
  minio:
    image: minio/minio:RELEASE.2021-09-24T00-24-24Z
    entrypoint: sh
    command: -c 'mkdir -p /data/storage && /opt/bin/minio server --address :8484 /data'
    environment:
      MINIO_ROOT_USER: ${STORAGE_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${STORAGE_SECRET_KEY}
    ports:
      - 8484:8484
    volumes:
      - ./data/minio:/data
  dashboard:
    image: nhost/dashboard:0.7.4
    ports:
      - "3030:3000"
volumes:
  functions_node_modules: